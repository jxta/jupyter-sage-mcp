[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jupyter-mcp-server"
version = "0.1.0"
description = "Model Context Protocol (MCP) server for Jupyter Notebook integration with support for multiple kernels"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Shigetoshi Yokoyama", email = "yoko@nii.ac.jp"}
]
keywords = ["jupyter", "mcp", "model-context-protocol", "notebook", "python", "sagemath", "julia"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.8"
dependencies = [
    "mcp>=0.1.0",
    "jupyter-client>=7.0.0",
    "jupyter-core>=4.7.0",
    "nbformat>=5.0.0",
    "nbconvert>=6.0.0",
    "tornado>=6.0.0",
    "traitlets>=5.0.0",
    "python-dateutil>=2.8.0",
    "pyzmq>=22.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=2.12.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
test = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.15.0",
]

[project.urls]
Homepage = "https://github.com/jxta/jupyter-sage-mcp"
Repository = "https://github.com/jxta/jupyter-sage-mcp"
Documentation = "https://jupyter-mcp-server.readthedocs.io"
Issues = "https://github.com/jxta/jupyter-sage-mcp/issues"

[project.scripts]
jupyter-mcp-server = "jupyter_mcp_server.server:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
jupyter_mcp_server = ["config/*.json", "templates/*.ipynb"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "jupyter_client.*",
    "nbformat.*",
    "nbconvert.*",
    "tornado.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
